(defn t[l] (
    if (= 1 (count l))
    (if (= (type []) (type (first l)))
        (t (list (first l)))
        (if (= (type ()) (type (first l)))
            (t (list (first l)))
            (first l)
        )
    )
    (if (= (type []) (type l))
    (apply conj (t (rest t)) (t (list (first l))))
    (apply conj (t (list (first l)) (reverse (t (rest t))))) 
))
)
